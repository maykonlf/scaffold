// Code generated by mockery v2.2.1. DO NOT EDIT.

package controllers

import (
	entities "github.com/maykonlf/scaffold/internal/domain/entities"
	mock "github.com/stretchr/testify/mock"

	template "github.com/maykonlf/scaffold/internal/usecase/template"
)

// UseCase is an autogenerated mock type for the UseCase type
type UseCase struct {
	mock.Mock
}

// Add provides a mock function with given fields: request
func (_m *UseCase) Add(request *template.AddRequest) error {
	ret := _m.Called(request)

	var r0 error
	if rf, ok := ret.Get(0).(func(*template.AddRequest) error); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// List provides a mock function with given fields:
func (_m *UseCase) List() ([]*entities.Template, error) {
	ret := _m.Called()

	var r0 []*entities.Template
	if rf, ok := ret.Get(0).(func() []*entities.Template); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*entities.Template)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
